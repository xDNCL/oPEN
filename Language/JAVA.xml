<?xml version="1.0" encoding="UTF-8"?>

<!-- 
CodeText = コードそのもの

<CodeText>専用タグ
@param _val		接続先の値を取得する
@param _label	自身のラベル（ブロック本体のラベル）の値を取得する
@param _preval 	<PreText> を各行頭につけた状態で、接続先の値を取得する
@param _br		任意の場所で改行

<PreCode>専用タグ
@param _t		タブ挿入

共通タグ
@param _space	半角スペース挿入

@param @ 区切り文字

 -->
<BlockEducationCode>
	<BlockCodes>
	    
	    <BlockCode name="NewBlock">
	        <CodeText>
	            @新しく定義したブロックです。 @_br
	            @コネクター１の値は「 @_val 
	            @」で、コネクタ−２の値は「 @_val
	            @」です。
	        </CodeText>
	        <PreText>
	        </PreText>
	    </BlockCode>
	    
	    <BlockCode name="start">
	        <CodeText>
	            @public @_space @class @_space @BlockEducation{ @_br
	            @public @_space @static @_space @void @_space @main(String[] @_space @args){ @_br
	            @_preval
	            @} @_br
	            @}
	        </CodeText>
	        <PreText>
	            @_t
	        </PreText>
	    </BlockCode>
	    
	    <BlockCode name="repeat-if">
	        <CodeText>
	            @while( @_val @){ @_br
	            @_preval
	            @}
	        </CodeText>
	       	<PreText>
	       	    @_t
	       	</PreText>
	    </BlockCode>
	    
	    <BlockCode name="if">
	        <CodeText>
	            @if( @_val @){ @_br
	            @_preval
	            @}
	        </CodeText>
	        <PreText>
	            @_t
	        </PreText>
	    </BlockCode>
	    
	   	<BlockCode name="ifelse">
	        <CodeText>
	           @if( @_val @){ @_br
	           @_preval
	           @}else{ @_br
	           @_preval
	           @}
	        </CodeText>
	        <PreText>
	            @_t
	        </PreText>
	    </BlockCode>
	    
	    <BlockCode name="substitution-number">
	        <CodeText>
	            @_label @= @_val @;
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="substitution-string">
	        <CodeText>
	            @_label @= @_val @;
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="sum">
	        <CodeText>
	            @( @_val @+ @_val @)
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="difference">
	        <CodeText>
     	        @( @_val @- @_val @)
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="quotient">
	        <CodeText>
 	       		@( @_val @/ @_val @)
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="product">
	        <CodeText>
	            @( @_val @* @_val @)
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="surplus">
	        <CodeText>
	            @( @_val @% @_val @)
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="setInt">
	        <CodeText>
	            @int @_space @_val @;
	        </CodeText>
	    </BlockCode>
	    
	   	<BlockCode name="setDouble">
	        <CodeText>
	            @double @_space @_val @;
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="setString">
	        <CodeText>
	            @String @_space @_val @;
	        </CodeText>
	    </BlockCode>	    
	    
	    <BlockCode name="setLong">
	        <CodeText>
	            @long @_space @_val @;
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="variable-Number">
	        <CodeText>
	            @_label
	        </CodeText>
	    </BlockCode>
	    
	   	<BlockCode name="variable-String">
	        <CodeText>
	            @_label
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="lessthan">
	        <CodeText>
	            @( @_val @＜ @_val @)
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="greaterthan">
	        <CodeText>
	            @( @_val @＞ @_val @)
	        </CodeText>
	    </BlockCode>
	        
	    <BlockCode name="equals">
	        <CodeText>
	            @( @_val @= @_val @)
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="number">
	        <CodeText>
	            @_label
	        </CodeText>
	    </BlockCode>
	    
	   	<BlockCode name="string">
	        <CodeText>
	            @_label
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="print-number">
	        <CodeText>
	            @System.out.print(" @_val @"); 
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="print-string">
	        <CodeText>
	            @System.out.print(" @_val @"); 
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="println-number">
	        <CodeText>
	            @System.out.println(" @_val @"); 
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="println-string">
	        <CodeText>
	           	@System.out.println(" @_val @"); 
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="keyboard-input-number">
	        <CodeText>
	        </CodeText>
	    </BlockCode>
	    
	    <BlockCode name="keyboard-input-string">
	        <CodeText>
	        </CodeText>
	    </BlockCode>
	    
	</BlockCodes>
</BlockEducationCode>