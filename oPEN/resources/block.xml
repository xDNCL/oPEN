<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE BlockLangDef SYSTEM "resources/blockInfo.dtd">

<!-- 


This describes every BlockGenus, BlockDrawer, BlockFamilies in Starlogo-TNG.

Note: For BlockGenus, if genus A relies on another genus B, that genus B must be 
specified in the xml file before genus A is specified.  We impose this requirement so 
that sanity checks can be made regarding the validity of a default argument when the
BlockGenuses are first loaded. 

-->

<BlockLangDef>

	<BlockConnectorShapes>
		<BlockConnectorShape shape-type="number" shape-number="1"></BlockConnectorShape>
		<BlockConnectorShape shape-type="number-list" shape-number="2"></BlockConnectorShape>
		<BlockConnectorShape shape-type="number-inv" shape-number="3"></BlockConnectorShape>
		<BlockConnectorShape shape-type="boolean" shape-number="4"></BlockConnectorShape>
		<BlockConnectorShape shape-type="boolean-list" shape-number="5"></BlockConnectorShape>
		<BlockConnectorShape shape-type="boolean-inv" shape-number="6"></BlockConnectorShape>
		<BlockConnectorShape shape-type="string" shape-number="7"></BlockConnectorShape>
		<BlockConnectorShape shape-type="string-list" shape-number="8"></BlockConnectorShape>
		<BlockConnectorShape shape-type="string-inv" shape-number="9"></BlockConnectorShape>
		<BlockConnectorShape shape-type="poly" shape-number="10"></BlockConnectorShape>
		<BlockConnectorShape shape-type="poly-list" shape-number="11"></BlockConnectorShape>
		<BlockConnectorShape shape-type="poly-inv" shape-number="12"></BlockConnectorShape>
		<BlockConnectorShape shape-type="proc-param" shape-number="13"></BlockConnectorShape>
		<BlockConnectorShape shape-type="cmd" shape-number="14"></BlockConnectorShape>
		<BlockConnectorShape shape-type="io" shape-number="100"></BlockConnectorShape>
	</BlockConnectorShapes>
	
	<BlockGenuses>
	    
	   	<BlockGenus name="test" kind="data" initlabel="test" color="255 242 0">
			<description>
				<text>
					キーボードから入力された数値を示します
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="poly" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="keybord-input-number"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>	
	    	    
<!-- for PEN Blocks -->
		<BlockGenus name="keyboard-input-number" kind="data" initlabel="キー入力値" color="255 242 0">
			<description>
				<text>
					キーボードから入力された数値を示します
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="keybord-input-number"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="keyboard-input-string" kind="data" initlabel="キー入力値" color="255 242 0">
			<description>
				<text>
					キーボードから入力された文字列を示します
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="keybord-input-string"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="println-number" kind="command" initlabel="表示する" color="255 255 255">
			<description>
				<text>
					数値を表示します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="print-number"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>	

		<BlockGenus name="println-string" kind="command" initlabel="表示する" color="255 255 255">
			<description>
				<text>
					文字列を表示します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="socket" connector-type="string">
				    <DefaultArg genus-name="string" label="テキスト入力"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="print-string"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>	

		<BlockGenus name="print-number" kind="command" initlabel="改行なし表示" color="255 255 255">
			<description>
				<text>
					数値を改行無しで表示します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="socket" connector-type="number">
				    <DefaultArg genus-name="variable-Number" label="x"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="print-number"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>	

		<BlockGenus name="print-string" kind="command" initlabel="改行なし表示" color="255 255 255">
			<description>
				<text>
					文字列を改行無しで表示します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="socket" connector-type="string">
				    <DefaultArg genus-name="string" label="テキスト入力"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="print-string"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>		

	    <BlockGenus name="substitution-number" kind="command" initlabel="x" editable-label="yes" is-label-value="yes" color="126 206 244">
		    <description>
				<text>数値を代入します。</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="に代入" connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="substitution-number"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
	    <BlockGenus name="substitution-string" kind="command" initlabel="str" editable-label="yes" is-label-value="yes" color="126 206 244">
		    <description>
				<text>文字列を代入します。</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="に代入" connector-kind="socket" connector-type="string"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="substitution-string"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="variable-Number" kind="data" initlabel="x" editable-label="yes" is-label-value="yes" color="177 10 255">
			<description>
				<text>
					変数(数値)を示します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="variable-Number"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="variable-String" kind="data" initlabel="str" editable-label="yes" is-label-value="yes" color="177 10 255">
			<description>
				<text>
					変数(文字列)を示します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="variable-String"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

	    <BlockGenus name="setInt" kind="command" initlabel="整数" color="132 204 201">
		    <description>
				<text>整数を宣言します。</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number">
				    <DefaultArg genus-name="variable-Number" label="x"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="setInt"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

	   	 <BlockGenus name="setDouble" kind="command" initlabel="実数" color="132 204 201">
		    <description>
				<text>実数を宣言します。</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number">
				    <DefaultArg genus-name="variable-Number" label="x"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
			    
				<LangSpecProperty key="vm-cmd-name" value="setDouble"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
	   	 <BlockGenus name="setString" kind="command" initlabel="文字列" color="132 204 201">
		    <description>
				<text>文字列を宣言します。</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="string">
				    <DefaultArg genus-name="variable-String" label="str"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="setString"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
	   	<BlockGenus name="print" kind="command" initlabel="表示する" color="132 204 201">
		    <description>
				<text>文字列を宣言します。</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="string">
				    <DefaultArg genus-name="variable-String" label="str"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="print"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
	    	    
<!-- for NQC Blocks -->
		
		  <BlockGenus name="out-a" kind="function" initlabel="port_A" color="255 255 255">
		    <description>
				<text></text>
			</description>
			<BlockConnectors>
 				<BlockConnector label="" connector-kind="pulg" connector-type="io"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="io"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="out-a"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		  <BlockGenus name="out-b" kind="function" initlabel="port_B" color="255 255 255">
		    <description>
				<text></text>
			</description>
			<BlockConnectors>
 				<BlockConnector label="" connector-kind="pulg" connector-type="io"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="io"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="out-b"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		  <BlockGenus name="out-c" kind="function" initlabel="port_C" color="255 255 255">
		    <description>
				<text></text>
			</description>
			<BlockConnectors>
 				<BlockConnector label="" connector-kind="pulg" connector-type="io"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="io"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="out-c"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="motor-on-fwd" kind="command" initlabel="前へ" color="255 255 255">
		    <description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector label="出力ポート" connector-kind="socket" connector-type="io"></BlockConnector>
				<BlockConnector label="パワー" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="50"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="motor-on-fwd"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="motor-on-rev" kind="command" initlabel="後ろへ" color="255 255 255">
		    <description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector label="出力ポート" connector-kind="socket" connector-type="io"></BlockConnector>
				<BlockConnector label="パワー" connector-kind="socket" connector-type="number">
				    <DefaultArg genus-name="number" label="50"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="motor-on-rev"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="motor-on-left" kind="command" initlabel="左へ" color="255 255 255">
		    <description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector label="出力ポート" connector-kind="socket" connector-type="io"></BlockConnector>
				<BlockConnector label="パワー" connector-kind="socket" connector-type="number">
				    <DefaultArg genus-name="number" label="50"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="motor-on-left"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>	
		</BlockGenus>
		
		<BlockGenus name="motor-on-right" kind="command" initlabel="右へ" color="255 255 255">
		    <description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector label="出力ポート" connector-kind="socket" connector-type="io"></BlockConnector>
				<BlockConnector label="パワー" connector-kind="socket" connector-type="number">
				    <DefaultArg genus-name="number" label="50"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="motor-on-right"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="motor-off" kind="command" initlabel="停止" color="255 255 255">
		    <description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector label="出力ポート" connector-kind="socket" connector-type="io"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="motor-off"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="wait" kind="command" initlabel="待機" color="255 80 0">
			<description>
				<text>
					<arg n="1"/> ミリ秒待ちます。
				</text>
				<arg-description n="1" name="(ミリ秒)">
					待つ時間(ミリ秒)
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="(ミリ秒)" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="1000"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="wait"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="sensor-input-port1" kind="function" initlabel="Port1からの入力値" color="255 255 255">
			<description>
				<text>
					入力ポート1から入力値を受け取る。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="sensor-input-port1"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="sensor-input-port3" kind="function" initlabel="Port3からの入力値" color="255 255 255">
			<description>
				<text>
					入力ポート3から入力値を受け取る。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="sensor-input-port3"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
						
		<BlockGenus name="sensor-input-port4" kind="function" initlabel="Port4からの入力値" color="255 255 255">
			<description>
				<text>
					入力ポート4から入力値を受け取る。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="sensor-input-port4"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="sensor-input-port2" kind="function" initlabel="Port2からの入力値" color="255 255 255">
			<description>
				<text>
					入力ポート2から入力値を受け取る。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="sensor-input-port2"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
  
	    <BlockGenus name="connectorTester" kind="command" initlabel="hoge" color="255 255 255">
			<description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector label="number" connector-kind="socket" connector-type="number"></BlockConnector>
				<BlockConnector label="number-list" connector-kind="socket" connector-type="number-list"></BlockConnector>
				<BlockConnector label="number-inv" connector-kind="socket" connector-type="number-inv"></BlockConnector>
				<BlockConnector label="boolean" connector-kind="socket" connector-type="boolean"></BlockConnector>
				<BlockConnector label="string" connector-kind="socket" connector-type="string"></BlockConnector>
				<BlockConnector label="poly" connector-kind="socket" connector-type="poly"></BlockConnector>
				<BlockConnector label="proc-param" connector-kind="socket" connector-type="proc-param"></BlockConnector>
				<BlockConnector label="cmd" connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="connectorTester"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
				
	    <BlockGenus name="start" kind="command" initlabel="プログラム開始" editable-label="yes" label-unique="yes" is-starter="yes" color="255 255 255">
			<description>
				<text>
					プログラムの開始点
				</text>
			</description>
			<BlockConnectors>
		
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-setup" value="yes"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="setup"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		
	    <BlockGenus name="setter" kind="command" initlabel="x" editable-label="yes" color="255 0 255" >
			<description>
				<text>
					変数の値を設定します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>
	    
	    <!-- new Blocks -->
	    <BlockGenus name="special" kind="command" initlabel="まとめる" color="255 255 255">
			<description>
				<text>
					てすと
				</text>
			</description>
				<arg-description n="1" name="first">
					The condition being tested.
				</arg-description>
				
				<arg-description n="2" name="second">
					The set of instructions that is done when the condition is true.
				</arg-description>
			<BlockConnectors>
			    <BlockConnector label="first" connector-kind="socket" connector-type="cmd" position-type="boolean"></BlockConnector>
				<BlockConnector label="second" connector-kind="socket" connector-type="cmd" position-type="cmd"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
	    <BlockGenus name="repeat-forever" kind="command" initlabel="ずっと" color="255 80 0">
			<description>
				<text>
					 ずっと回繰り返して実行します。
				</text>				
				<arg-description n="1" name="do">
					実行するブロック。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="repeat-forever"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
	    <BlockGenus name="repeat-if" kind="command" initlabel="繰り返し" color="255 80 0">
			<description>
				<text>
					 条件が真である限り、実行し続けます。
				</text>
				<arg-description n="1" name="times">
					繰り返す条件。
				</arg-description>
				
				<arg-description n="2" name="do">
					実行するブロック。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="の間" connector-kind="socket" connector-type="boolean"></BlockConnector>
				<BlockConnector label="実行する" connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="repeat"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
	    <!--		
	  	<BlockGenus name="if" kind="command" initlabel="if" color="255 80 0">
			<description>
				<text>
					If <arg n="1"/> is true, the agent will run the blocks attached to <arg n="2"/>
				</text>
				<arg-description n="1" name="test">
					The condition being tested.
				</arg-description>
				
				<arg-description n="2" name="then">
					The set of instructions that is done when the condition is true.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="test" connector-kind="socket" connector-type="boolean"></BlockConnector>
				<BlockConnector label="then" connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="if"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		-->
	    
	    
		<!-- Stub Genuses 
			Do not remove unless you would like to remove the stub feature all together
		-->
		
		
		<BlockGenus name="getter" kind="data" initlabel="x" editable-label="yes" color="255 0 255" >
			<description>
				<text>
					変数の値を報告します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>	
		</BlockGenus>
		
		<!--
		<BlockGenus name="setter" kind="command" initlabel="" color="0 0 255" label-prefix="set ">
			<description>
				<text>
					変数の値を設定します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="poly" position-type="single"></BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		-->
		<BlockGenus name="caller" kind="command" initlabel="" color="0 0 0">
			<description>
				<text>
					指定した名前のメソッドを呼び出します。
				</text>
			</description>
		</BlockGenus>

		<BlockGenus name="inc" kind="command" initlabel="" color="0 0 0" label-prefix="inc ">
			<description>
				<text>
					可変数の値を増分します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="single"></BlockConnector>
			</BlockConnectors>		
		</BlockGenus>
		
		<BlockGenus name="agent" kind="function" initlabel="" color="0 0 0" label-suffix=" of" is-starter="yes" is-terminator="yes">
			<description>
				<text>
					対象のIDの値を取得します。
				</text>
			</description>
			<BlockConnectors>
			    <BlockConnector connector-kind="plug" connector-type="poly" position-type="single"></BlockConnector>
				<BlockConnector label="ID" connector-kind="socket" connector-type="number" position-type="single"></BlockConnector>
			</BlockConnectors>	
			<LangSpecProperties>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>			
		</BlockGenus>
		
		<!-- End of Stub Genuses -->
	
		<BlockGenus name="number" kind="data" initlabel="1" editable-label="yes" is-label-value="yes" color="255 0 255">
			<description>
				<text>
					数を示します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="string" kind="data" initlabel="テキスト" editable-label="yes" is-label-value="yes" color="255 0 255">
			<description>
				<text>
					テキストを示します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string" position-type="mirror"></BlockConnector>		
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="true" kind="data" initlabel="true" color="255 0 255">
			<description>
				<text>
					Boolean型の真(true)を示します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="true"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="false" kind="data" initlabel="false" color="255 0 255">
			<description>
				<text>
					Boolean型の偽(false)を示します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="false"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<!-- COLORS -->
		
		<BlockGenus name="random-color" kind="function" initlabel="ランダムカラー" color="27 180 225">
			<description>
				<text>
					ランダムな色を選択します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="random-color"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="red" kind="data" initlabel="赤色" color="255 0 0">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="15"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="black" kind="data" initlabel="黒色" color="0 0 0">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="0"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="white" kind="data" initlabel="白色" color="255 255 255">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="9"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="gray" kind="data" initlabel="灰色" color="128 128 128">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="5"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="orange" kind="data" initlabel="橙色" color="255 165 0">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="25"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="brown" kind="data" initlabel="茶色" color="165 42 42">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="35"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="yellow" kind="data" initlabel="黄色" color="255 255 0">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="45"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="green" kind="data" initlabel="緑色" color="50 205 50">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="55"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="lime" kind="data" initlabel="ライム" color="0 255 0">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="65"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="turquoise" kind="data" initlabel="ターコイズ" color="64 224 208">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="75"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="cyan" kind="data" initlabel="シアン" color="0 255 255">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="85"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="purple" kind="data" initlabel="紫色" color="128 0 128">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="115"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="magenta" kind="data" initlabel="マゼンタ" color="255 0 255">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="125"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="sky" kind="data" initlabel="空色" color="135 206 255">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="95"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="blue" kind="data" initlabel="青色" color="0 0 255">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="105"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="pink" kind="data" initlabel="ピンク" color="255 192 203">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="135"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<!-- MOVEMENT -->
	
		<BlockGenus name="fd" kind="command" initlabel="前へ" color="255 0 0">
			<description>
				<text>
					対象を <arg n="1"/> ステップ前へ動かす。
				</text>
				<arg-description n="1" name="steps">
					移動するステップ数。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="steps" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="1"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="fd"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
	    <BlockGenus name="bk" kind="command" initlabel="後ろへ" color="255 0 0">
			<description>
				<text>
					対象を <arg n="1"/> ステップ後ろへ動かす。
				</text>
				<arg-description n="1" name="steps">
					移動するステップ数。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="steps" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="1"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="bk"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="lt" kind="command" initlabel="左へ" color="255 0 0">
			<description>
				<text>
					対象を左に <arg n="1"/> 度回転させます。
				</text>
				<arg-description n="1" name="degs">
					回転する度数。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="degs" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="90"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="lt"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
	
		<BlockGenus name="rt" kind="command" initlabel="右へ" color="255 0 0">
			<description>
				<text>
					対象を右に <arg n="1"/> 度回転させます。
				</text>
				<arg-description n="1" name="degs">
					回転する度数。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="degs" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="90"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="rt"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="up" kind="command" initlabel="上へ" color="255 0 0">
			<description>
				<text>
					対象の高さを <arg n="1"/> ステップ増加させます。
				</text>
				<arg-description n="1" name="ステップ">
					移動するステップ数。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="steps" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="1"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="up"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="down" kind="command" initlabel="下へ" color="255 0 0">
			<description>
				<text>
					対象の高さを <arg n="1"/> ステップ減少させます。
				</text>
				<arg-description n="1" name="steps">
					移動するステップ数。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="steps" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="1"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="down"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="setxy" kind="command" initlabel="座標指定" color="255 0 0">
			<description>
				<text>対象のｘとｙ座標を指定します（別位置）。</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="ｘ座標" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="0"></DefaultArg>	
				</BlockConnector>
				<BlockConnector label="ｙ座標" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="0"></DefaultArg>	
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="setxy"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<!-- LOGIC -->
		
		<BlockGenus name="if" kind="command" initlabel="条件分岐" color="255 80 0">
			<description>
				<text>
					もし <arg n="1"/> が真（true）ならば、<arg n="2"/>に続くブロックを実行します。
				</text>
				<arg-description n="1" name="test">
					テストする条件。
				</arg-description>
				
				<arg-description n="2" name="then">
					条件が真(true)のときに実行されるブロックのセット。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="ならば" connector-kind="socket" connector-type="boolean"></BlockConnector>
				<BlockConnector label="真(true)" connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="if"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="ifelse" kind="command" initlabel="条件分岐" color="255 80 0">
			<description>
				<text>
					指定された条件が真(true)の場合１つ目のセットを、偽(false)の場合２つ目のセットを実行します。
				</text>
				<arg-description n="1" name="test">
					テストする条件。
				</arg-description>
				
				<arg-description n="2" name="then">
					条件が真(true)のときに実行されるブロックのセット。
				</arg-description>
				
				<arg-description n="3" name="else">
					条件が偽(false)のときに実行されるブロックのセット。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="ならば" connector-kind="socket" connector-type="boolean"></BlockConnector>
				<BlockConnector label="真(true)" connector-kind="socket" connector-type="cmd"></BlockConnector>
				<BlockConnector label="偽(else)" connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="ifelse"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="repeat" kind="command" initlabel="繰り返し" color="255 80 0">
			<description>
				<text>
					 <arg n="1"/> 回繰り返して実行します。
				</text>
				<arg-description n="1" name="times">
					繰り返す回数。
				</arg-description>
				
				<arg-description n="2" name="do">
					実行するブロック。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="回数" connector-kind="socket" connector-type="number"></BlockConnector>
				<BlockConnector label="実行" connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="repeat"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
			
		<BlockGenus name="or" kind="function" initlabel="または" color="15 20 220">
			<description>
				<text>
					2条件のうち一方、あるいは両方が真(true)の場合に、真(true)を返します。
				</text>
				<arg-description n="2" doc-name="condition 1">
					1つ目の条件。
				</arg-description>
				<arg-description n="3" doc-name="condition 2">
					2つ目の条件。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="boolean" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="boolean" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="or"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="and" kind="function" initlabel="かつ" color="15 20 220">
			<description>
				<text>
					2条件の両方が真(true)の場合に、真(true)を返します。
				</text>
				<arg-description n="2" doc-name="condition 1">
					1つ目の条件。
				</arg-description>
					<arg-description n="3" doc-name="condition 2">
					2つ目の条件。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="boolean" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="boolean" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="and"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="not" kind="function" initlabel="not" color="15 20 220">
			<description>
				<text>
					 <arg n="1"/>の逆値を返します。
				</text>
				<arg-description n="1" doc-name="boolean">
					 (<em>true</em> or <em>false</em>) 真(true)と偽(false)を反転させます。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="boolean"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="not"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		
		<BlockGenus name="count-everyone-with" kind="function" initlabel="count everyone with" color="255 0 255">
			<description>
				<text>
					Counts all agents that satisfy a certain condition.
				</text>
				<arg-description n="1" name="condition" doc-name="condition">
					The condition an agent must satisfy to be counted
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="boolean"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="count-everyone-with"></LangSpecProperty>
				<LangSpecProperty key="inline-arg" value="0"></LangSpecProperty>
				<LangSpecProperty key="inline-stack-type" value="breed"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
				<LangSpecProperty key="ask-arg" value="0"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="count-everyone" kind="function" initlabel="count everyone" color="255 0 255">
			<description>
				<text>
					Reports the number of agents that are currently alive.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" position-type="mirror" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="count-everyone"></LangSpecProperty>
				<LangSpecProperty key="inline-arg" value="0"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<!-- String Functions or Commands -->
		
		<BlockGenus name="say" kind="command" initlabel="say" color="45 201 255">
			<description>
				<text>
					Causes this agent to "say" the supplied text by popping up a speech bubble in SpaceLand.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="poly"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="say"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="set-status" kind="command" initlabel="テキスト表示" color="45 201 255">
			<description>
				<text>
				    このブロックに接続されているテキストを表示します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="string"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set-status"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="play" kind="command" initlabel="play sound" color="150 255 107">
			<description>
				<text>
					Causes agent to play a sound with the following <arg n="1"/>.  Select a sound from the Sounds drawer and attach to this block.  
				</text>
				<arg-description n="1" name="name">
					The text name of the sound to play.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="string"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="play"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>	
		
		<BlockGenus name="to-string" kind="function" initlabel="テキストへ変換" color="45 201 255">
			<description>
				<text>
					これに接続された、ブロック（複数可）の文字列表現を返します。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="string"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="poly"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="to-string"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>	
		
		<BlockGenus name="string-append" kind="function" initlabel="+" color="45 201 255">
			<description>
				<text>
					 <arg n="2"/> の後ろに <arg n="3"/>をつなげます。
				</text>
				<arg-description n="2" doc-name="first">
					 <arg n="3"/>の前のテキスト表現。
				</arg-description>
				<arg-description n="3" doc-name="second">
					<arg n="2"/>の後ろにつなげるテキスト表現。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="string" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="string" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="sentence"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>	
		
	
		<!-- MATH -->
		
		<BlockGenus name="pi" kind="function" initlabel="π" color="255 0 255">
			<description>
				<text>
					円周率の値を返します(約3.14)。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="pi"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="e" kind="function" initlabel="e" color="255 0 255">
			<description>
				<text>
					ネイピア数の値を返します(約2.718)。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="e"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="surplus" kind="function" initlabel="％" color="15 20 220">
			<description>
				<text>
					2つの値を余剰を返します (<arg n="1"/> + <arg n="2"/>)。
				</text>
				<arg-description n="1" doc-name="left number">
				</arg-description>
				<arg-description n="2" doc-name="right number">
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="surplus"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="sum" kind="function" initlabel="+" color="15 20 220">
			<description>
				<text>
					2つの値を加算した値を返します (<arg n="1"/> + <arg n="2"/>)。
				</text>
				<arg-description n="1" doc-name="left number">
				</arg-description>
				<arg-description n="2" doc-name="right number">
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="sum"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="difference" kind="function" initlabel="-" color="15 20 220">
			<description>
				<text>
					2つの値を減算した値を返します (<arg n="1"/> - <arg n="2"/>)。
				</text>
				<arg-description n="1" doc-name="left number">
				</arg-description>
				<arg-description n="2" doc-name="right number">
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="difference"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="product" kind="function" initlabel="x" color="15 20 220">
			<description>
				<text>
					2つの値を乗算した値を返します (<arg n="1"/> x <arg n="2"/>)。
				</text>
				<arg-description n="1" doc-name="left value">
				</arg-description>
				<arg-description n="2" doc-name="right value">
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="product"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="quotient" kind="function" initlabel="÷" color="15 20 220">
			<description>
				<text>
					2つの値を除算した値を返します (<arg n="1"/> ÷ <arg n="2"/>)。
				</text>
				<arg-description n="1" doc-name="left value">
				</arg-description>
				<arg-description n="2" doc-name="right value">
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="quotient"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="equals" kind="function" initlabel="=" color="15 20 220">
			<description>
				<text>
					2つの値が等しいかを調べます(<arg n="1"/> = <arg n="2"/>)。
				</text>
				<arg-description n="1" doc-name="left value">
				</arg-description>
				<arg-description n="2" doc-name="right value">
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="equals"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="not-equals" kind="function" initlabel="≠" color="15 20 220">
			<description>
				<text>
					2つの値が異なっているかを調べます (<arg n="1"/> != <arg n="2"/>).
				</text>
				<arg-description n="1" doc-name="left value">
				1番目の比較する値。
				</arg-description>
				<arg-description n="2" doc-name="right value">
				2番目の比較する値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="poly" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="poly" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="not-equals"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="lessthan" kind="function" initlabel="&lt;" color="15 20 220">
			<description>
				<text>
					 <arg n="1"/> が <arg n="2"/>より小さいかを調べます。
				</text>
				<arg-description n="1" doc-name="left value">
				1番目の比較する値。
				</arg-description>
				<arg-description n="2" doc-name="right value">
				2番目の比較する値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="less-than"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="lessthanorequalto" kind="function" initlabel="?" color="15 20 220">
			<description>
				<text>
					 <arg n="1"/> が <arg n="2"/> 以下か調べます。
				</text>
				<arg-description n="1" doc-name="left value">
				1番目の比較する値。
				</arg-description>
				<arg-description n="2" doc-name="right value">
				2番目の比較する値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="less-than-or-equal-to"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="greaterthan" kind="function" initlabel="&gt;" color="15 20 220">
			<description>
				<text>
					 <arg n="1"/> が <arg n="2"/>より大きいかを調べます。
				</text>
				<arg-description n="1" doc-name="left value">
				1番目の比較する値。
				</arg-description>
				<arg-description n="2" doc-name="right value">
				2番目の比較する値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="greater-than"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="greaterthanorequalto" kind="function" initlabel="?" color="15 20 220">
			<description>
				<text>
					 <arg n="1"/> が <arg n="2"/>以上かを調べます。
				</text>
				<arg-description n="1" doc-name="left value">
				1番目の比較する値。
				</arg-description>
				<arg-description n="2" doc-name="right value">
				2番目の比較する値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="greater-than-or-equal-to"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="atan" kind="function" initlabel="atan" color="15 20 220">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector label="x" connector-kind="socket" connector-type="number"></BlockConnector>
				<BlockConnector label="y" connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="atan"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="random" kind="function" initlabel="乱数" color="15 20 220">
			<description>
				<text>
					1以上 <arg n="1"/>以下の整数値を返します。
				</text>
				<arg-description n="1" doc-name="number">
					乱数の範囲の上限数値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="10" />
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="random"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="round" kind="function" initlabel="四捨五入" color="15 20 220">
			<description>
				<text>
					<arg n="1"/> を最も近い整数値に四捨五入します。
				</text>
				<arg-description n="1" doc-name="number">
					四捨五入する数値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="round"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="int" kind="function" initlabel="整数化" color="15 20 220">
			<description>
				<text>
					数値の整数部分のみを返します(小数点以下切り捨て)。
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="int"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="remainder" kind="function" initlabel="remainder" color="15 20 220">
			<description>
				<text>
					<arg n="2"/> を <arg n="3"/> で割った余りを返します。
				</text>
				<arg-description n="2" doc-name="first">
					分子の値。
				</arg-description>
				
				<arg-description n="3" doc-name="second">
					分母の値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="remainder"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="min" kind="function" initlabel="最小値" color="15 20 220">
			<description>
				<text>
					2つの値の小さい方の数値を返します。	
				</text>
				<arg-description n="2" doc-name="number 1">
					1つ目の比較する値。
				</arg-description>
				<arg-description n="3" doc-name="number 2">
					2つ目の比較する値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="min"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="max" kind="function" initlabel="最大値" color="15 20 220">
			<description>
				<text>
					2つの値の大きい方の数値を返します。	
				</text>
				<arg-description n="2" doc-name="number 1">
					1つ目の比較する値。
				</arg-description>
				<arg-description n="3" doc-name="number 2">
					2つ目の比較する値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="max"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="power" kind="function" initlabel="塁乗" color="15 20 220">
			<description>
				<text>
					1つ目の数値を基数、2つ目の数値をべき数とした累乗の計算結果を返す (<arg n="1"/> ^ <arg n="2"/>).
				</text>
				<arg-description n="1" doc-name="base">
				</arg-description>
				<arg-description n="2" doc-name="exponent">
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number" position-type="bottom"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="power"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="abs" kind="function" initlabel="絶対値" color="15 20 220">
			<description>
				<text>
					数値の絶対値を返します。
				</text>
				<arg-description n="1" doc-name="number">
					絶対値にする数値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="abs"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="sqrt" kind="function" initlabel="平方根" color="15 20 220">
			<description>
				<text>
					<arg n="1"/> の平方根(実数値)を返します。
				</text>
				<arg-description n="1" doc-name="number">
					平方根を取る数値。
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="sqrt"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="sin" kind="function" initlabel="sin" color="15 20 220">
			<description>
				<text>
					A Trigonmetric function that reports the sine of the specified angle. 
				</text>
				<arg-description n="1" name="degs">
					The angle in degrees for which the sine will be reported.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector label="degs" connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="sin"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="cos" kind="function" initlabel="cos" color="15 20 220">
			<description>
				<text>
					A Trigonmetric function that reports the cosine of the specified angle. 
				</text>
				<arg-description n="1" name="degs">
					The angle in degrees for which the cosine will be reported.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector label="degs" connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="cos"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="tan" kind="function" initlabel="tan" color="15 20 220">
			<description>
				<text>
					A Trigonmetric function that reports the tangent of the specified angle. 
				</text>
				<arg-description n="1" name="degs">
					The angle in degrees for which the tangent will be reported.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector label="degs" connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="tan"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="asin" kind="function" initlabel="asin" color="15 20 220">
			<description>
				<text>
					Trigonometric function that reports the arcsine of the specified number.  All angles are reported in degrees.
				</text>
				<arg-description n="1" doc-name="number">
					A number from which to get the arcsine.
				</arg-description>
				</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="asin"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="acos" kind="function" initlabel="acos" color="15 20 220">
			<description>
				<text>
					Trigonometric function that reports the arccosine of the specified number.  All angles are reported in degrees.
				</text>
				<arg-description n="1" doc-name="number">
					A number from which to get the arccosine.
				</arg-description>
				</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="acos"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="log" kind="function" initlabel="log" color="15 20 220">
			<description>
				<text>
					Reports the logarithm base 10 of <arg n="1"/>. <note>The return value <i>x</i> will be the number for which 10 to the power of <i>x</i> is equal to <arg n="1"/>.</note>
				</text>
				<arg-description n="1" doc-name="number">
					The number of which to take the natural logarithm
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="log"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="ln" kind="function" initlabel="ln" color="15 20 220">
			<description>
				<text>
					Reports the natural logarithm of <arg n="1"/>. <note>The return value <i>x</i> will be the number for which the mathematical constant e, which is about 2.718, to the power of <i>x</i> is equal to <arg n="1"/>.</note>
				</text>
				<arg-description n="1" doc-name="number">
					The number of which to take the natural logarithm
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="ln"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<!-- TERRAIN --> 
				
		<BlockGenus name="pc" kind="function" initlabel="patch color" color="40 255 0">
			<description>
             	<text>Reports the color of the patch where the agent is standing.</text>
            </description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="pc"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="stamp" kind="command" initlabel="stamp" color="0 236 0">
			<description>
             	<text>Changes the color of the patch on which this agent is to <arg n="1"/>.</text>
				<arg-description n="1" name="color">
					The color to which to change the patch.
				</arg-description>
            </description>
			<BlockConnectors>
				<BlockConnector label="color" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="red" label="red"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="stamp"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="patch-height" kind="function" initlabel="patch height" color="40 255 0">
			<description>
             	 <text>Reports the height of the patch where the agent is standing.</text>
            </description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="patch-height"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		<BlockGenus name="stomp" kind="command" initlabel="stomp" color="0 236 0">
			<description>
             	<text>Decreases the height of the patch where the agent is standing, smoothly connecting the edges to surrounding patches.</text>
				<arg-description n="1" name="height">
					How much the patch height is decreased.
				</arg-description>
            </description>
			<BlockConnectors>
				<BlockConnector label="height" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="1"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="stomp"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="yank" kind="command" initlabel="yank" color="0 236 0">
			<description>
             	<text>Increases the height of the patch where the agent is standing, smoothly connecting the edges to surrounding patches.</text>
				<arg-description n="1" name="height">
					How much the patch height is increased.
				</arg-description>
            </description>
			<BlockConnectors>
				<BlockConnector label="height" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="1"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="yank"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<!-- TRAITS -->
		
		<BlockGenus name="setc" kind="command" initlabel="set color" color="27 180 225">
			<description>
				<text>Sets the color of the agent to the given color.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="red" label="red"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="setc"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="color" kind="function" initlabel="color" color="44 220 255">
			<description>
				<text>Reports the color of this agent.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="agent-color"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="seth" kind="command" initlabel="set heading" color="27 180 225">
			<description>
				<text>Sets the heading of this agent to the specified value in degrees.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="0"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="seth"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="heading" kind="function" initlabel="heading" color="44 220 255">
			<description>
				<text>Reports the angle, in degrees, where the agent is heading.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="heading"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="xcor" kind="function" initlabel="xcor" color="44 220 255">
			<description>
				<text>Reports the x coordinate of this agent.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="xcor"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="ycor" kind="function" initlabel="ycor" color="44 220 255">
			<description>
				<text>Reports the y coordinate of this agent.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="ycor"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="scale" kind="function" initlabel="size" color="44 220 255">
			<description>
				<text>Reports the size, or scale, of this agent.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="agent-scale"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="setscale" kind="command" initlabel="set size" color="27 180 225">
			<description>
				<text>Sets the size of this agent's shape.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="1"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set-scale"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>


		<BlockGenus name="who" kind="function" initlabel="ID" color="44 220 255">
			<description>
				<text>Reports the ID number, or "ID" of this agent.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="who"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="penup" kind="command" initlabel="pen up" color="27 180 225">
			<description>
				<text>Pulls the agent's pen up so the agent will not stamp every patch where it moves.</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="pu"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="pendown" kind="command" initlabel="pen down" color="27 180 225">
			<description>
				<text>Pulls the agent's pen down so the agent will stamp every patch where it moves.</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="pd"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="pendown?" kind="function" initlabel="pen down?" color="44 220 255">
			<description>
				<text>Reports true if this agent's pen is down, and false otherwise.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="pendown?"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="shape" kind="function" initlabel="shape" color="44 220 255">
			<description>
				<text>Reports the shape of this agent.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="shape"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="breed" kind="function" initlabel="breed" color="44 220 255">
			<description>
				<text>Reports the breed of this agent.</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="breed"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="setshape" kind="command" initlabel="set shape" color="27 180 225">
			<description>
				<text>
					Causes this agent to change its shape to the supplied shape.
				</text>
				<arg-description n="1" name="string" doc-name="string">
					The shape
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="string"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="setshape"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="setbreed" kind="command" initlabel="set breed" color="27 180 225">
			<description>
				<text>
					Causes this agent to change its breed to the supplied breed.
				</text>
				<arg-description n="1" name="string" doc-name="string">
					The name of the new breed.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="string"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="setbreed"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<!-- CONTROLS -->
		
		<BlockGenus name="keyboard-up" kind="data" initlabel="keyboard up arrow?" color="255 255 0">
			<description>
				<text>
					Reports whether the up arrow key is being pressed. <note>Arrow keys have a drop down menu that allow you to select other arrow keys.</note>
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="keyboard-up"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="keyboard-down" kind="data" initlabel="keyboard down arrow?" color="255 255 0">
			<description>
				<text>
					Reports whether the down arrow key is being pressed. <note>Arrow keys have a drop down menu that allow you to select other arrow keys.</note>
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="keyboard-down"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="keyboard-left" kind="data" initlabel="keyboard left arrow?" color="255 255 0">
			<description>
				<text>
					Reports whether the left arrow key is being pressed. <note>Arrow keys have a drop down menu that allow you to select other arrow keys.</note>
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="keyboard-left"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="keyboard-right" kind="data" initlabel="keyboard right arrow?" color="255 255 0">
			<description>
				<text>
					Reports whether the right arrow key is being pressed. <note>Arrow keys have a drop down menu that allow you to select other arrow keys.</note>
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="keyboard-right"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="keyboard-space" kind="data" initlabel="keyboard space bar?" color="255 255 0">
			<description>
				<text>
					Reports whether the space bar is being pressed. 
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="keyboard-space"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="joy-xaxis" kind="function" initlabel="joy x-axis" color="255 255 0">
			<description>
				<text>
					Reports the current position along the x-axis of the joystick.  Reports -1 at the extreme left position and +1 at the extreme right.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="joy-xaxis"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="joy-yaxis" kind="function" initlabel="joy y-axis" color="255 255 0">
			<description>
				<text>
					Reports the current position along the y-axis of the joystick.  Reports -10 at the extreme left position and +10 at the extreme right.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="joy-yaxis"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="joy-radius" kind="function" initlabel="joy radius" color="255 255 0">
			<description>
				<text>
					Reports the current radius of the position of the joystick.  Reports 0 when the joystick is in the center and 1 when it is full deflected in any direction.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="joy-radius"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="joy-angle" kind="function" initlabel="joy angle" color="255 255 0">
			<description>
				<text>
					Reports the current angle in degrees that the joystick is at, with 0 at the top and 180 at the bottom.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="joy-angle"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="dpad-angle" kind="function" initlabel="dpad angle" color="255 255 0">
			<description>
				<text>
					Reports the angle in degrees of the direction pad on a gamepad.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="dpad-angle"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="joy-button1?" kind="function" initlabel="button 1?" color="255 255 0">
			<description>
				<text>
					Reports <em>true</em> if the first joystick button is down and <em>false</em> if it is not.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="joy-button-1?"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="joy-button2?" kind="function" initlabel="button 2?" color="255 255 0">
			<description>
				<text>
					Reports <em>true</em> if the second joystick button is down and <em>false</em> if it is not.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="joy-button-2?"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="joy-button3?" kind="function" initlabel="button 3?" color="255 255 0">
			<description>
				<text>
					Reports <em>true</em> if the third joystick button is down and <em>false</em> if it is not.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="joy-button-3?"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="joy-button4?" kind="function" initlabel="button 4?" color="255 255 0">
			<description>
				<text>
					Reports <em>true</em> if the fourth joystick button is down and <em>false</em> if it is not.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="joy-button-4?"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="set-agent-camera" kind="command" initlabel="set agent camera" color="255 255 0">
			<description>
				<text>
					If <arg n="1"/> is the ID number of a live agent, that agent will run the blocks attached to <arg n="2"/>
				</text>
				<arg-description n="1" name="ID">
					The ID of the agent being asked to run something.
				</arg-description>
				
				<arg-description n="2" name="then">
					The set of instructions that is run when by the asked agent.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set-agent-camera"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="who-of-agent-camera" kind="function" initlabel="ID of agent camera" color="255 255 0">
			<description>
				<text>
					Reports the ID number of the agent that is currently being followed by the camera.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="who-of-agent-camera"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="over-shoulder?" kind="function" initlabel="over shoulder?" color="255 255 0">
			<description>
				<text>
					Reports whether over-the-soulder view is on.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="over-shoulder?"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="over-shoulder-on" kind="command" initlabel="over shoulder" color="255 255 0">
			<description>
				<text>
				Turns the over-the-shoulder view on.
				</text>
			</description>
			<BlockConnectors>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="over-shoulder-on"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="agent-eye?" kind="function" initlabel="agent eye?" color="255 255 0">
			<description>
				<text>
					Reports whether agent-eye view is on.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="agent-eye?"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="agent-eye-on" kind="command" initlabel="agent eye" color="255 255 0">
			<description>
				<text>
					Turns the agent-eye view on.
				</text>
			</description>
			<BlockConnectors>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="agent-eye-on"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		<BlockGenus name="aerial?" kind="function" initlabel="aerial?" color="255 255 0">
			<description>
				<text>
					Returns <em>true</em> if the aerial camera view is on and <em>false</em> if it is off.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="aerial?"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="aerial-on" kind="command" initlabel="aerial" color="255 255 0">
			<description>
				<text>
					Turns the agent-eye view on.
				</text>
			</description>
			<BlockConnectors>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="aerial-on"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="overhead?" kind="function" initlabel="overhead?" color="255 255 0">
			<description>
				<text>
					Returns <em>true</em> if the overhead camera view is on and <em>false</em> if it is off.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="overhead?"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="overhead-on" kind="command" initlabel="overhead on" color="255 255 0">
			<description>
				<text>
					Turns <em>overhead</em> camera mode on.  This is a 2D aerial view of the entire spaceland with map view turned on.	
				</text>
			</description>
			<BlockConnectors>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="overhead-on"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="overhead-off" kind="command" initlabel="overhead off" color="255 255 0">
			<description>
				<text>
					Turns <em>overhead</em> camera mode off and goes back to the previous camera view.
				</text>
			</description>
			<BlockConnectors>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="overhead-off"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>

		
		<!-- Procedure and parameters -->
		
		<BlockGenus name="procedure" kind="procedure" initlabel="Procedure" editable-label="yes" label-unique="yes" page-label-enabled="yes" is-starter="yes" color="177 10 255">
			<description>
				<text>
					Defines a section of blocks as a procedure that can be called from other sections of blocks.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="poly" is-expandable="yes"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="caller">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-procedure"></LangSpecProperty>
						<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
						<LangSpecProperty key="is-breed-set-by-canvas" value="yes"></LangSpecProperty>
						<LangSpecProperty key="stack-type" value="breed"></LangSpecProperty>
					</LangSpecProperties>
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-procedure"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-breed-set-by-canvas" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="proc-param-number" kind="param" initlabel="number param" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="177 10 255">
			<description>
				<text>
					Adds a number parameter to a procedure.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
						<LangSpecProperty key="scope" value="local"></LangSpecProperty>
						<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="type" value="number"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
			</LangSpecProperties>	
		</BlockGenus>
		
		<BlockGenus name="proc-param-boolean" kind="param" initlabel="boolean param" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="177 10 255">
			<description>
				<text>
					Adds a boolean parameter to a procedure.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
						<LangSpecProperty key="scope" value="local"></LangSpecProperty>
						<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="type" value="boolean"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
			</LangSpecProperties>	
		</BlockGenus>
		
		<BlockGenus name="proc-param-string" kind="param" initlabel="text param" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="177 10 255">
			<description>
				<text>
					Adds a text parameter to a procedure.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
						<LangSpecProperty key="scope" value="local"></LangSpecProperty>
						<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="type" value="string"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
			</LangSpecProperties>	
		</BlockGenus>
		
		<BlockGenus name="proc-param-list" kind="param" initlabel="list param" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="177 10 255">
			<description>
				<text>
					Adds a list parameter to a procedure.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="poly-list"></BlockConnector>
			</BlockConnectors>
			<Stubs>
				<Stub stub-genus="getter">
					<LangSpecProperties>
						<LangSpecProperty key="vm-cmd-name" value="eval-local"></LangSpecProperty>
						<LangSpecProperty key="scope" value="local"></LangSpecProperty>
						<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
					</LangSpecProperties>	
				</Stub>
			</Stubs>
			<LangSpecProperties>
				<LangSpecProperty key="type" value="list"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-procedure"></LangSpecProperty>
			</LangSpecProperties>	
		</BlockGenus>
		
		<!-- SETUP AND RUNTIME BLOCKS -->
		
		<!-- NOTE: The genus names "forever", "runonce", and "runforsometime" is duplicated in RunBlockManager.java, 
			if you change this name, make sure to change it there too.  -->
		<BlockGenus name="forever" kind="command" initlabel="forever" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					When switched on, agents do commands over and over. <note>There are different commands for each breed.</note>
				</text>
				<arg-description n="1" name="agents" doc-name="breed">
					The breed of the agents performing the commands attached here.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<Images>
				<Image block-location="southwest" image-editable="yes" width="15" height="15">
					<FileLocation>support/forever_switch_on.png</FileLocation>
				</Image>
			</Images>
			<LangSpecProperties>
				<LangSpecProperty key="runtime-type" value="forever"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-forever"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="runtime-forever" kind="command" initlabel="forever" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					When switched on, agents do commands over and over. <note>There are different commands for each breed.</note>
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="runtime-type" value="forever"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="runonce" kind="command" initlabel="run once" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					When switched on, agents do commands once. <note>There are different commands for each breed.</note>
				</text>
				<arg-description n="1" name="agents" doc-name="breed">
					The breed of the agents performing the commands attached here.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<Images>
				<Image block-location="southwest" image-editable="yes" width="15" height="15">
					<FileLocation>support/forever_switch_on.png</FileLocation>
				</Image>
			</Images>
			<LangSpecProperties>
				<LangSpecProperty key="runtime-type" value="runonce"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-forever"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="runtime-once" kind="command" initlabel="run once" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					When switched on, agents do commands once. <note>There are different commands for each breed.</note>
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="runtime-type" value="runonce"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="runforsometime" kind="command" initlabel="run" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					When switched on, agents do commands over and over for <arg n="1"/> seconds. <note>There are different commands for each breed.</note>
				</text>
				
				<arg-description n="1" name="secs">
					The number of seconds for which the commands are run when switched on.
				</arg-description>
				
				<arg-description n="2" name="agents" doc-name="breed">
					The breed of the agents performing the commands attached here.
				</arg-description>
			</description>
			<BlockConnectors>
			    <BlockConnector label="secs" connector-kind="socket" connector-type="number">
			    </BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<Images>
				<Image block-location="southwest" image-editable="yes" width="15" height="15">
					<FileLocation>support/forever_switch_on.png</FileLocation>
				</Image>
			</Images>
			<LangSpecProperties>
				<LangSpecProperty key="runtime-type" value="runforsometime"></LangSpecProperty>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-forever"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="runtime-sometime" kind="command" initlabel="run" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					When switched on, agents do commands over and over for a number of seconds. <note>There are different commands for each breed.</note>
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="runtime-type" value="runforsometime"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="setup" kind="command" initlabel="setup" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					This block serves as a wrapper around blocks that set up a model.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-setup" value="yes"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="setup"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="runtime-setup" kind="command" initlabel="setup" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					This block serves as a wrapper around blocks that set up a model.
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="is-runtime" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="monitor" kind="command" initlabel="monitor" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					A block used to define a monitor.  Mointors appear in the runtime space where they dynamically report a value.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="poly"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-monitor" value="yes"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="monitor"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="runtime-monitor" kind="command" initlabel="monitor" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					A block used to define a monitor.  Mointors appear in the runtime space where they dynamically report a value.
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="is-runtime" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="slider" kind="command" initlabel="slider" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					A block used to define a slider.  Sliders appear in the runtime space where you can dynamically change the value of its attached shared number variable.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number-inv"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-slider" value="yes"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="monitor"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="runtime-slider" kind="command" initlabel="slider" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					Use the slider to change the value of this slider's attached shared number variable.  
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="is-runtime" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="table" kind="command" initlabel="table" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					Defines a table that appears in the runtime space.  Each input to its sockets describes a series in the graph.  Values are graphed against time.	
				</text>
				<arg-description n="1" name="data">
					Data values to be graphed.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="data" connector-kind="socket" connector-type="number" label-editable="yes" is-expandable="yes"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-table" value="yes"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="monitor"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="runtime-table" kind="command" initlabel="table" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					Use the table to moniter the value of this graph's attached shared variable.  
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="is-runtime" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-runtime-table" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="line-graph" kind="command" initlabel="line graph" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					Defines a line graph that appears in the runtime space.  Each input to its sockets describes a series in the graph.  Values are graphed against time.	
				</text>
				<arg-description n="1" name="data">
					Data values to be graphed.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="data" connector-kind="socket" connector-type="number" label-editable="yes" is-expandable="yes"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-line-graph" value="yes"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="monitor"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="runtime-line-graph" kind="command" initlabel="line graph" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					Use the line graph to moniter the value of this graph's attached shared variable.  
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="is-runtime" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-runtime-line-graph" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="bar-graph" kind="command" initlabel="bar graph" editable-label="yes" label-unique="yes" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					Defines a bar graph that appears in the runtime space.  Each input to its sockets describes a series in the graph.  Values in the graph may change dynamically over time.
				</text>
				<arg-description n="1" name="data">
					Data values to be graphed.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="data" connector-kind="socket" connector-type="number" label-editable="yes" is-expandable="yes"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-bar-graph" value="yes"></LangSpecProperty>
				<LangSpecProperty key="has-runtime-equiv" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="monitor"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="runtime-bar-graph" kind="command" initlabel="bar graph" is-starter="yes" is-terminator="yes" color="139 0 0">
			<description>
				<text>
					Use the bar graph to moniter the value of this graph's attached shared variable.  
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="is-runtime" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-runtime-bar-graph" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="clear-all" kind="command" initlabel="clear all" color="139 0 0">
			<description>
				<text>
					Resets the terrain to flat and green, and kills all of the agents in SpaceLand.
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="ca"></LangSpecProperty>
				<LangSpecProperty key="is-setup-block" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="setup"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="clear-everyone" kind="command" initlabel="clear everyone" color="139 0 0">
			<description>
				<text>
					Kills all of the agents in SpaceLand.
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="ct"></LangSpecProperty>
				<LangSpecProperty key="is-setup-block" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="setup"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="clear-patches" kind="command" initlabel="clear patches" color="139 0 0">
			<description>
				<text>
					Flattens the terrain in Spaceland and repaints it green.  
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="cp"></LangSpecProperty>
				<LangSpecProperty key="is-setup-block" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="setup"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="scatter-everyone" kind="command" initlabel="scatter everyone" color="139 0 0">
			<description>
				<text>
					Scatters all agents randomly around the terrain.
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="scatter-everyone"></LangSpecProperty>
				<LangSpecProperty key="is-setup-block" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="setup"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		
		<BlockGenus name="set-score" kind="command" initlabel="set score" color="230 0 255 ">
			<description>
				<text>
					Sets the score to be the given value.
				</text>
				<arg-description n="1" name="score" doc-name="score">
					The new value for the score.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="set-score"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="score" kind="function" initlabel="score" color="230 0 255 ">
			<description>
				<text>
					Reports the current score.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" position-type="mirror" connector-type="number"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="score"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		
		<!-- BREED SPECIFIC BLOCKS -->
		
		<BlockGenus name="create-agents" kind="command" initlabel="" label-prefix="create " color="139 0 0">
			<description>
				<text>
				Creates <arg n="1"/> number of agents of the given breed.
				</text>
				<arg-description n="1" name="num">
					The number of agents to create.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="num" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="10"></DefaultArg>
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="vm-cmd-name" value="crt-breed"></LangSpecProperty>
				<LangSpecProperty key="is-setup-block" value="yes"></LangSpecProperty>
				<LangSpecProperty key="include-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="include-breed-shape" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="setup"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="create-and-do" kind="command" initlabel="" label-prefix="create " color="139 0 0">
			<description>
				<text>
				Creates <arg n="1"/> number of agents of the given breed and has each do the specified commands.
				</text>
				<arg-description n="1" name="num">
					The number of agents to create.
				</arg-description>
				<arg-description n="2" name="cmd">
					The commands for each agent to do.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="num" connector-kind="socket" connector-type="number">
					<DefaultArg genus-name="number" label="10"></DefaultArg>
				</BlockConnector>
				<BlockConnector label="do" connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="vm-cmd-name" value="crt-breed-do"></LangSpecProperty>
				<LangSpecProperty key="is-setup-block" value="yes"></LangSpecProperty>
				<LangSpecProperty key="inline-arg" value="1"></LangSpecProperty>
				<LangSpecProperty key="include-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="include-breed-shape" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="setup"></LangSpecProperty>
				<LangSpecProperty key="inline-stack-type" value="breed-forever"></LangSpecProperty>
				<LangSpecProperty key="ask-arg" value="1"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="breed-string" kind="function" initlabel="" label-prefix="breed: "  color="255 0 255">
			<description>
				<text>
				  	Reports the name of the given breed.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string" position-type="mirror">
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="vm-cmd-name" value="nop"></LangSpecProperty>
				<LangSpecProperty key="include-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="count-breeds" kind="function" initlabel="" label-prefix="count "  color="128 30 255">
			<description>
				<text>
				  	Reports the number agents of this breed.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number" position-type="mirror">
				</BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="vm-cmd-name" value="count-breeds"></LangSpecProperty>
				<LangSpecProperty key="include-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="count-breeds-with" kind="function" initlabel="" label-prefix="count "  label-suffix=" with" color="128 30 255">
			<description>
				<text>
				  	Reports the number agents of this breed that satisfy the given condition.
				</text>
				<arg-description n="1" doc-name="condition">
					A condition that must be true of the counted agents.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="number"></BlockConnector>
				<BlockConnector label="condition" connector-kind="socket" connector-type="boolean"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="vm-cmd-name" value="count-breeds-with"></LangSpecProperty>
				<LangSpecProperty key="include-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="is-monitorable" value="yes"></LangSpecProperty>
				<LangSpecProperty key="inline-arg" value="0"></LangSpecProperty>
				<LangSpecProperty key="inline-stack-type" value="breed"></LangSpecProperty>
				<LangSpecProperty key="ask-arg" value="0"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="scatter-breeds" kind="command" initlabel="" label-prefix="scatter "  color="139 0 0">
			<description>
				<text>
				  	Scatters agents of this breed across SpaceLand.
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="vm-cmd-name" value="scatter-agents"></LangSpecProperty>
				<LangSpecProperty key="include-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="setup"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="clear-breeds" kind="command" initlabel="" label-prefix="clear "  color="139 0 0">
			<description>
				<text>
				  	Clears all agents of this breed.
				</text>
			</description>
			<LangSpecProperties>
				<LangSpecProperty key="is-owned-by-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="vm-cmd-name" value="clear-breeds"></LangSpecProperty>
				<LangSpecProperty key="include-breed" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="setup"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="collision" kind="command" initlabel="Collision" color="128 128 128" is-starter="yes" is-terminator="yes" page-label-enabled="yes">
			<description>
				<text>Constantly checks for collisions between agents.  If a collision occurs, causes the collider to run the <arg n="1"/> code, and the collidee to run the <arg n="2"/> code.  Which agent is the collidee and which is the collider depends on the block.  For example, if a Turtle and Frog collide, the collision block with "Turtles" as the first port and "Frogs" as the second port will assume that the Turtle is the collider and the Frog is the collidee.</text>
				<arg-description n="1" name="me">
				This is the code that the collider runs.
				</arg-description>
				
				<arg-description n="2" name="agents">
					This is the code that the collidee runs.  The label of this port determines which breed will be assumed to be collidee.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="socket" connector-type="cmd"></BlockConnector>
				<BlockConnector connector-kind="socket" connector-type="cmd"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="is-collision" value="yes"></LangSpecProperty>
				<LangSpecProperty key="stack-type" value="breed-collision"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		

		<!-- SHAPES (see ShapeBlocksGenerator) -->
		
		<BlockGenus name="random-shape" kind="function" initlabel="random shape" color="255 252 138">
			<description>
				<text>
					Selects a random shape.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"></BlockConnector>
			</BlockConnectors>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="random-shape"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<!-- DYNAMIC BLOCKS -->
		
		<BlockGenus name="ashape" kind="data" initlabel="" color="255 252 138">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"></BlockConnector>
			</BlockConnectors>
			<Images>
				<Image width="64" height="64">
					<FileLocation>/models/animals/turtle/default_icon.png</FileLocation>
				</Image>
			</Images>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="animals/turtle-default"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		<BlockGenus name="bshape" kind="data" initlabel="" color="255 252 138">
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="string"></BlockConnector>
			</BlockConnectors>
			<Images>
				<Image width="64" height="64">
					<FileLocation>/models/animals/sonic/sonic_icon.png</FileLocation>
				</Image>
			</Images>
			<LangSpecProperties>
				<LangSpecProperty key="vm-cmd-name" value="eval-num"></LangSpecProperty>
				<LangSpecProperty key="special-value" value="animals/sonic-sonic"></LangSpecProperty>
			</LangSpecProperties>
		</BlockGenus>
		
		
		
	</BlockGenuses>
	
	<BlockFamilies>
		<BlockFamily>
			<FamilyMember>fd</FamilyMember>
			<FamilyMember>bk</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>rt</FamilyMember>
			<FamilyMember>lt</FamilyMember>
		</BlockFamily> 
		<BlockFamily>
			<FamilyMember>up</FamilyMember>
			<FamilyMember>down</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>penup</FamilyMember>
			<FamilyMember>pendown</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>true</FamilyMember>
			<FamilyMember>false</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>min</FamilyMember>
			<FamilyMember>max</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>round</FamilyMember>
			<FamilyMember>int</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>sin</FamilyMember>
			<FamilyMember>cos</FamilyMember>
			<FamilyMember>tan</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>log</FamilyMember>
			<FamilyMember>ln</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>over-shoulder-on</FamilyMember>
			<FamilyMember>agent-eye-on</FamilyMember>
			<FamilyMember>aerial-on</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>overhead-on</FamilyMember>
			<FamilyMember>overhead-off</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>overhead?</FamilyMember>
			<FamilyMember>aerial?</FamilyMember>
			<FamilyMember>agent-eye?</FamilyMember>
			<FamilyMember>over-shoulder?</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>joy-button1?</FamilyMember>
			<FamilyMember>joy-button2?</FamilyMember>
			<FamilyMember>joy-button3?</FamilyMember>
			<FamilyMember>joy-button4?</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>joy-xaxis</FamilyMember>
			<FamilyMember>joy-yaxis</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>xcor</FamilyMember>
			<FamilyMember>ycor</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>random-color</FamilyMember>
			<FamilyMember>black</FamilyMember>
			<FamilyMember>blue</FamilyMember>
			<FamilyMember>brown</FamilyMember>
			<FamilyMember>cyan</FamilyMember>
			<FamilyMember>gray</FamilyMember>
			<FamilyMember>green</FamilyMember>
			<FamilyMember>lime</FamilyMember>
			<FamilyMember>magenta</FamilyMember>
			<FamilyMember>orange</FamilyMember>
			<FamilyMember>pink</FamilyMember>
			<FamilyMember>purple</FamilyMember>
			<FamilyMember>red</FamilyMember>
			<FamilyMember>sky</FamilyMember>
			<FamilyMember>turquoise</FamilyMember>
			<FamilyMember>white</FamilyMember>
			<FamilyMember>yellow</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>keyboard-up</FamilyMember>
			<FamilyMember>keyboard-down</FamilyMember>
			<FamilyMember>keyboard-left</FamilyMember>
			<FamilyMember>keyboard-right</FamilyMember>
			<FamilyMember>keyboard-space</FamilyMember>
		</BlockFamily> 
		<BlockFamily>
			<FamilyMember>equals</FamilyMember>
			<FamilyMember>not-equals</FamilyMember>
			<FamilyMember>lessthan</FamilyMember>
			<FamilyMember>greaterthan</FamilyMember>
			<FamilyMember>lessthanorequalto</FamilyMember>
			<FamilyMember>greaterthanorequalto</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>and</FamilyMember>
			<FamilyMember>or</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>sum</FamilyMember>
			<FamilyMember>difference</FamilyMember>
			<FamilyMember>quotient</FamilyMember>
			<FamilyMember>product</FamilyMember>
			<FamilyMember>surplus</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>stomp</FamilyMember>
			<FamilyMember>yank</FamilyMember>
		</BlockFamily>
		<BlockFamily>
		    <FamilyMember>motor-on-fwd</FamilyMember>
		    <FamilyMember>motor-on-rev</FamilyMember>
		    <FamilyMember>motor-on-left</FamilyMember>
		    <FamilyMember>motor-on-right</FamilyMember>
		</BlockFamily>
		<BlockFamily>
		    <FamilyMember>out-a</FamilyMember>
		    <FamilyMember>out-b</FamilyMember>
		    <FamilyMember>out-c</FamilyMember>
		</BlockFamily>
		<BlockFamily>
		    <FamilyMember>sensor-input-port1</FamilyMember>
		    <FamilyMember>sensor-input-port2</FamilyMember>
   		    <FamilyMember>sensor-input-port3</FamilyMember>
   		    <FamilyMember>sensor-input-port4</FamilyMember>
		</BlockFamily>
		<BlockFamily>
		    <FamilyMember>setInt</FamilyMember>
	 	    <FamilyMember>setDouble</FamilyMember>
		</BlockFamily>
		
	</BlockFamilies>
	
<!-- ここからいじる -->
	<BlockDrawerSets>	
		<BlockDrawerSet name="factory" type="stack" location="southwest" window-per-drawer="no" drawer-draggable="no" >
			<BlockDrawer name="Setup and Run" type="factory" is-open="yes" button-color="173 0 0">
				<BlockGenusMember>setup</BlockGenusMember>
				<BlockGenusMember>forever</BlockGenusMember>
				<BlockGenusMember>runforsometime</BlockGenusMember>
				<BlockGenusMember>runonce</BlockGenusMember>
				<BlockGenusMember>clear-all</BlockGenusMember>
				<BlockGenusMember>clear-everyone</BlockGenusMember>
				<BlockGenusMember>clear-patches</BlockGenusMember>
				<BlockGenusMember>set-score</BlockGenusMember>
				<BlockGenusMember>score</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer name="移動系ブロック" type="factory" button-color="247 0 0">
				<BlockGenusMember>fd</BlockGenusMember>
				<BlockGenusMember>bk</BlockGenusMember>
				<BlockGenusMember>lt</BlockGenusMember>
				<BlockGenusMember>rt</BlockGenusMember>
				<BlockGenusMember>up</BlockGenusMember>
				<BlockGenusMember>down</BlockGenusMember>
				<BlockGenusMember>setxy</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer name="制御系ブロック" type="factory" button-color="255 173 0">
				<BlockGenusMember>if</BlockGenusMember>
				<BlockGenusMember>ifelse</BlockGenusMember>
				<BlockGenusMember>repeat</BlockGenusMember>
				<BlockGenusMember>and</BlockGenusMember>
				<BlockGenusMember>or</BlockGenusMember>
				<BlockGenusMember>not</BlockGenusMember>
				<BlockGenusMember>equals</BlockGenusMember>
				<BlockGenusMember>lessthan</BlockGenusMember>
				<BlockGenusMember>true</BlockGenusMember>
				<BlockGenusMember>false</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer name="Controls" type="factory" button-color="255 235 0">
				<BlockGenusMember>keyboard-up</BlockGenusMember>
				<BlockGenusMember>keyboard-space</BlockGenusMember>
				<BlockGenusMember>joy-xaxis</BlockGenusMember>
				<BlockGenusMember>joy-yaxis</BlockGenusMember>
				<BlockGenusMember>joy-radius</BlockGenusMember>
				<BlockGenusMember>joy-angle</BlockGenusMember>
				<BlockGenusMember>dpad-angle</BlockGenusMember>
				<BlockGenusMember>joy-button1?</BlockGenusMember>
				<BlockGenusMember>joy-button2?</BlockGenusMember>
				<BlockGenusMember>joy-button3?</BlockGenusMember>
				<BlockGenusMember>joy-button4?</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer name="Terrain" type="factory" button-color="120 255 0">
				<BlockGenusMember>stamp</BlockGenusMember>
				<BlockGenusMember>pc</BlockGenusMember>
				<BlockGenusMember>stomp</BlockGenusMember>
				<BlockGenusMember>yank</BlockGenusMember>
				<BlockGenusMember>patch-height</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer name="Traits" type="factory" button-color="0 255 254">
				<BlockGenusMember>who</BlockGenusMember>
				<BlockGenusMember>setc</BlockGenusMember>
				<BlockGenusMember>color</BlockGenusMember>
				<BlockGenusMember>setshape</BlockGenusMember>
				<BlockGenusMember>shape</BlockGenusMember>
				<BlockGenusMember>setbreed</BlockGenusMember>
				<BlockGenusMember>breed</BlockGenusMember>
				<BlockGenusMember>seth</BlockGenusMember>
				<BlockGenusMember>heading</BlockGenusMember>
				<BlockGenusMember>penup</BlockGenusMember>
				<BlockGenusMember>pendown</BlockGenusMember>
				<BlockGenusMember>pendown?</BlockGenusMember>
				<BlockGenusMember>setscale</BlockGenusMember>
				<BlockGenusMember>scale</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer name="テキスト系ブロック" type="factory" button-color="45 201 255">
				<BlockGenusMember>string</BlockGenusMember>
				<BlockGenusMember>say</BlockGenusMember>
				<BlockGenusMember>set-status</BlockGenusMember>
				<BlockGenusMember>to-string</BlockGenusMember>
				<BlockGenusMember>string-append</BlockGenusMember>
				<BlockGenusMember>equals</BlockGenusMember>
				<BlockGenusMember>not-equals</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer name="数学系ブロック" type="factory" button-color="102 129 255">
				<BlockGenusMember>number</BlockGenusMember>
				<BlockGenusMember>pi</BlockGenusMember>
				<BlockGenusMember>e</BlockGenusMember>
				<BlockGenusMember>sum</BlockGenusMember>
				<BlockGenusMember>difference</BlockGenusMember>
				<BlockGenusMember>product</BlockGenusMember>
				<BlockGenusMember>quotient</BlockGenusMember>
				<BlockGenusMember>equals</BlockGenusMember>
				<BlockGenusMember>not-equals</BlockGenusMember>
				<BlockGenusMember>lessthan</BlockGenusMember>
				<BlockGenusMember>greaterthan</BlockGenusMember>
				<BlockGenusMember>lessthanorequalto</BlockGenusMember>
				<BlockGenusMember>greaterthanorequalto</BlockGenusMember>
				<BlockGenusMember>atan</BlockGenusMember>
				<BlockGenusMember>random</BlockGenusMember>
				<BlockGenusMember>round</BlockGenusMember>
				<BlockGenusMember>int</BlockGenusMember>
				<BlockGenusMember>min</BlockGenusMember>
				<BlockGenusMember>max</BlockGenusMember>
				<BlockGenusMember>remainder</BlockGenusMember>
				<BlockGenusMember>power</BlockGenusMember>
				<BlockGenusMember>abs</BlockGenusMember>
				<BlockGenusMember>sqrt</BlockGenusMember>
				<BlockGenusMember>sin</BlockGenusMember>
				<BlockGenusMember>cos</BlockGenusMember>
				<BlockGenusMember>tan</BlockGenusMember>
				<BlockGenusMember>asin</BlockGenusMember>
				<BlockGenusMember>acos</BlockGenusMember>
				<BlockGenusMember>log</BlockGenusMember>
				<BlockGenusMember>ln</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer name="Procedure" type="factory" button-color="177 10 255">
				<BlockGenusMember>procedure</BlockGenusMember>
				<BlockGenusMember>proc-param-number</BlockGenusMember>
				<BlockGenusMember>proc-param-string</BlockGenusMember>
				<BlockGenusMember>proc-param-boolean</BlockGenusMember>
				<BlockGenusMember>proc-param-list</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer name="カラー系ブロック" type="factory" button-color="255 155 64">
				<BlockGenusMember>setc</BlockGenusMember>
				<BlockGenusMember>random-color</BlockGenusMember>
				<BlockGenusMember>blue</BlockGenusMember>
				<BlockGenusMember>cyan</BlockGenusMember>
				<BlockGenusMember>green</BlockGenusMember>
				<BlockGenusMember>lime</BlockGenusMember>
				<BlockGenusMember>magenta</BlockGenusMember>
				<BlockGenusMember>orange</BlockGenusMember>
				<BlockGenusMember>pink</BlockGenusMember>
				<BlockGenusMember>purple</BlockGenusMember>
				<BlockGenusMember>red</BlockGenusMember>
				<BlockGenusMember>sky</BlockGenusMember>
				<BlockGenusMember>turquoise</BlockGenusMember>
				<BlockGenusMember>white</BlockGenusMember>
				<BlockGenusMember>yellow</BlockGenusMember>
				<BlockGenusMember>brown</BlockGenusMember>
				<BlockGenusMember>gray</BlockGenusMember>
				<BlockGenusMember>black</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer name="すぺしゃる系ブロック" type="factory" button-color="255 255 255">
			    <BlockGenusMember>special</BlockGenusMember>
			    <BlockGenusMember>getter</BlockGenusMember>
			    <BlockGenusMember>setter</BlockGenusMember>
			    <BlockGenusMember>start</BlockGenusMember>
			</BlockDrawer>			    
			<BlockDrawer button-color="255 255 255" name="NXT" type="factory">
				<BlockGenusMember>motor-on-fwd</BlockGenusMember>
				<BlockGenusMember>motor-on-rev</BlockGenusMember>
				<BlockGenusMember>motor-on-left</BlockGenusMember>
				<BlockGenusMember>motor-on-right</BlockGenusMember>
			</BlockDrawer>
			<!-- Shapes are automatically loaded as blocks in the Shapes drawer
				 (see slcodeblocks.ShapeBlocksGenerator for details)  -->
			<!-- Sound blocks reside in the auto-generated String drawer.  
				 (see slcodeblocks.SoundBlocksGenerator for details)  -->
		</BlockDrawerSet>
	</BlockDrawerSets>
	
	<!-- ここまで -->

	<Pages drawer-with-page="yes">
		<Page page-name="Turtles" page-width="400"></Page>
		<!-- 
		<Page page-name="Everyone" page-width="400"></Page>
		<Page page-name="Setup" page-width="400"></Page>
		<Page page-name="Runtime" page-width="400"></Page>
		 -->
	</Pages>

	<TrashCan>
		<OpenTrashImage>/support/images/trash_open.png</OpenTrashImage>
		<ClosedTrashImage>/support/images/trash.png</ClosedTrashImage>
	</TrashCan>
	
	<BreedShapeMappings>
		<BtoSMapping>
			<BreedName>Turtles</BreedName>
			<BreedShape>animals/turtle-default</BreedShape>
		</BtoSMapping>
	</BreedShapeMappings>
	
</BlockLangDef>